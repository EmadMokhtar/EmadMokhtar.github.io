<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Emad Mokhtar's Framework - Django</title><link>http://www.emadmokhtar.com/</link><description>Geek developer who's in search of code perfection.</description><lastBuildDate>Tue, 09 May 2017 15:00:00 +0300</lastBuildDate><item><title>Create Login Page for your Django app</title><link>http://www.emadmokhtar.com/create-login-page-for-your-django-app.html</link><description>&lt;p&gt;&lt;img alt="Create Login Page for your Django app" src="http://www.emadmokhtar.com/images/Create-Login-Page-for-your-Django-app.png"&gt;&lt;/p&gt;
&lt;h1&gt;Why Another Post about this?&lt;/h1&gt;
&lt;p&gt;I found each time I start new Django project, I need to create Login HTML page, and with that I need to write Django View and Form. Each time I tried to Google how to do it, I found many posts about how to do …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">EmadMokhtar</dc:creator><pubDate>Tue, 09 May 2017 15:00:00 +0300</pubDate><guid isPermaLink="false">tag:www.emadmokhtar.com,2017-05-09:/create-login-page-for-your-django-app.html</guid><category>django</category><category>python</category><category>forms</category></item><item><title>Custom Client Side Validation for Parsley in Django</title><link>http://www.emadmokhtar.com/custom-client-side-validation-for-parsley-in-django.html</link><description>&lt;p&gt;&lt;img alt="Custom Validation for Parsley in Django" src="http://www.emadmokhtar.com/images/Custom-Validation-for-Parsley-in-Django.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;I wrote a post on how to add &lt;a href="http://www.emadmokhtar.com/client-side-validation-for-django-forms.html"&gt;client side validation for Django Forms&lt;/a&gt;. In this post I’ll show you how to add custom client validation to Django Forms. I mean by custom validation is a validation that isn't available in &lt;a href="https://github.com/agiliq/Django-parsley"&gt;django-parsley&lt;/a&gt;, like username availability, password strength, email duplication …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">EmadMokhtar</dc:creator><pubDate>Sun, 16 Apr 2017 15:00:00 +0300</pubDate><guid isPermaLink="false">tag:www.emadmokhtar.com,2017-04-16:/custom-client-side-validation-for-parsley-in-django.html</guid><category>django</category><category>python</category><category>parsley</category><category>validation</category></item><item><title>Client side validation for Django Forms</title><link>http://www.emadmokhtar.com/client-side-validation-for-django-forms.html</link><description>&lt;p&gt;&lt;img alt="Parsley" src="http://www.emadmokhtar.com/images/parsley.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.lovethegarden.com/sites/default/files/styles/full_width_700/public/images_and_media/parsley.jpg?itok=X7psNkrF"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In DUTH 2016 there was a session for &lt;a href="https://youtu.be/uzTaWKcMzos"&gt;Django Validation by Loïc Bistuer&lt;/a&gt;, in the session Loïc showed many areas you can validate user inputs from Django Form way to the Database Engine. To be honest validation in Django is a piece of cake and even if there is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Emad Mokhtar</dc:creator><pubDate>Wed, 08 Mar 2017 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:www.emadmokhtar.com,2017-03-08:/client-side-validation-for-django-forms.html</guid><category>Django</category><category>Forms</category></item><item><title>Yet another and easier way to daemonize Celery</title><link>http://www.emadmokhtar.com/yet-another-and-easier-way-to-daemonize-celery.html</link><description>&lt;p&gt;I wrote a post about &lt;a href="http://www.emadmokhtar.com/how-to-run-celery-as-daemon.html"&gt;how to run celery as daemon&lt;/a&gt; and it has many steps to do, many files to copy to your server, configure permissions, and configure upstart, but after sometime I found another and easier way to daemonize Celery.&lt;/p&gt;
&lt;p&gt;In this method we will use &lt;a href="http://supervisord.org"&gt;supervisor&lt;/a&gt; to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">EmadMokhtar</dc:creator><pubDate>Mon, 21 Nov 2016 15:00:00 +0300</pubDate><guid isPermaLink="false">tag:www.emadmokhtar.com,2016-11-21:/yet-another-and-easier-way-to-daemonize-celery.html</guid><category>django</category><category>python</category><category>celery</category></item><item><title>Add isort and flake8 test to your Django Project</title><link>http://www.emadmokhtar.com/add-isort-and-flake8-test-to-your-django-project.html</link><description>&lt;p&gt;&lt;img alt="Unit Test Works" src="http://www.emadmokhtar.com/images/unit-test-works.jpg"&gt;&lt;/p&gt;
&lt;p&gt;In this post I'll tell you how to add isort and flake8 tests to your Django project test suite, this is simple script and you can start from this point and customize you own test suite.&lt;/p&gt;
&lt;p&gt;As they said Django is a “batteries included” web application framework, and one of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Emad Mokhtar</dc:creator><pubDate>Tue, 27 Sep 2016 18:00:00 +0300</pubDate><guid isPermaLink="false">tag:www.emadmokhtar.com,2016-09-27:/add-isort-and-flake8-test-to-your-django-project.html</guid><category>django</category><category>python</category><category>unittest</category><category>howto</category></item><item><title>How to run Celery as daemon?</title><link>http://www.emadmokhtar.com/how-to-run-celery-as-daemon.html</link><description>&lt;p&gt;&lt;img alt="celery smoothy" src="http://www.emadmokhtar.com/images/celerysmoothie.jpg"&gt;&lt;/p&gt;
&lt;h1&gt;Install upstart script&lt;/h1&gt;
&lt;h2&gt;Permissions&lt;/h2&gt;
&lt;p&gt;We need to make the user which will be used to run celery an owner of &lt;code&gt;log&lt;/code&gt; and &lt;code&gt;run&lt;/code&gt; directories.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo chown -R root:root /var/log/celery/
sudo chown -R root:root /var/run/celery/
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Celery upstart&lt;/h2&gt;
&lt;p&gt;1- Download &lt;code&gt;celeryd&lt;/code&gt; file from &lt;a href="http://github.com/celery/celery/tree/3.1/extra/generic-init.d/"&gt;Celery official github …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Emad Mokhtar</dc:creator><pubDate>Tue, 20 Sep 2016 15:00:00 +0300</pubDate><guid isPermaLink="false">tag:www.emadmokhtar.com,2016-09-20:/how-to-run-celery-as-daemon.html</guid><category>django</category><category>python</category><category>celery</category></item><item><title>Send Emails Asynchronously from Django</title><link>http://www.emadmokhtar.com/send-emails-asynchronously-from-django.html</link><description>&lt;p&gt;In this article you will learn:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;How to send emails from &lt;a href="https://www.djangoproject.com"&gt;Django&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;How to use &lt;a href="http://www.celeryproject.org/"&gt;Celery&lt;/a&gt; and &lt;a href="https://github.com/pmclanahan/django-celery-email"&gt;Django-Celery-Email&lt;/a&gt; to send email asynchronously.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Last week I had the chance to get my hand dirty with Celery, I used it to send emails from Django project asynchronously using Django app call djnago-celery-email …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Emad Mokhtar</dc:creator><pubDate>Sun, 24 Jan 2016 12:00:00 +0300</pubDate><guid isPermaLink="false">tag:www.emadmokhtar.com,2016-01-24:/send-emails-asynchronously-from-django.html</guid><category>django</category><category>python</category><category>celery</category><category>emails</category></item><item><title>Extend Django User Model and Generic Class Based View "GCBV"</title><link>http://www.emadmokhtar.com/extend-django-user-model-and-generic-class-based-view-gcbv.html</link><description>&lt;p&gt;&lt;img alt="1450356512_full.png" src="http://www.emadmokhtar.com/images/1450356512_full.png"&gt; When I started to learn Django, I used to use the function based view aka FBV and in my current project I decided to learn class based view CBV, I watched one &lt;a href="https://www.youtube.com/watch?v=BJiOERA49ZQ"&gt;DjangoCon videos by Andrew Pinkham&lt;/a&gt; to make this easier on me, and if you tried or planning to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Emad Mokhtar</dc:creator><pubDate>Fri, 18 Dec 2015 12:00:00 +0300</pubDate><guid isPermaLink="false">tag:www.emadmokhtar.com,2015-12-18:/extend-django-user-model-and-generic-class-based-view-gcbv.html</guid><category>Django</category><category>Python</category></item><item><title>Free Django hosting</title><link>http://www.emadmokhtar.com/free-django-hosting.html</link><description>&lt;p&gt;If you developed Django application and want to deploy/publish it to the web you can check this list of Django friendly (http://djangofriendly.com/hosts/), but if you want a free hosting you can use &lt;a href="https://www.pythonanywhere.com/pricing/"&gt;Python Anywhere free hosting&lt;/a&gt;, I’m using it for &lt;a href="http://www.emadmokhtar.com/my-first-django-app.html"&gt;my Django app&lt;/a&gt; and I …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">EmadMokhtar</dc:creator><pubDate>Sun, 19 Apr 2015 12:33:00 +0300</pubDate><guid isPermaLink="false">tag:www.emadmokhtar.com,2015-04-19:/free-django-hosting.html</guid><category>django</category><category>python</category></item><item><title>My First Django App</title><link>http://www.emadmokhtar.com/my-first-django-app.html</link><description>&lt;p&gt;I'm starting to use Django and Python to develop web applications, I really love Django and during my learning process I thought I can build something while learning, and I had one idea keep it on hold as side project so I decided it's time to build it.&lt;/p&gt;
&lt;h1&gt;The Idea …&lt;/h1&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">EmadMokhtar</dc:creator><pubDate>Mon, 16 Mar 2015 13:00:00 +0300</pubDate><guid isPermaLink="false">tag:www.emadmokhtar.com,2015-03-16:/my-first-django-app.html</guid><category>django</category><category>python</category><category>sideproject</category></item></channel></rss>