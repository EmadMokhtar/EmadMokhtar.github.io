<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Emad Mokhtar's Framework - Python</title><link href="http://www.emadmokhtar.com/" rel="alternate"></link><link href="http://www.emadmokhtar.com/feeds/python.atom.xml" rel="self"></link><id>http://www.emadmokhtar.com/</id><updated>2019-01-26T17:00:00+03:00</updated><subtitle>Geek developer who's in search of code perfection.</subtitle><entry><title>Difference between `==` and `is` in Python, and when to use each of them</title><link href="http://www.emadmokhtar.com/difference-between-and-is-in-python-and-when-to-use-each-of-them.html" rel="alternate"></link><published>2019-01-26T17:00:00+03:00</published><updated>2019-01-26T17:00:00+03:00</updated><author><name>Emad Mokhtar</name></author><id>tag:www.emadmokhtar.com,2019-01-26:/difference-between-and-is-in-python-and-when-to-use-each-of-them.html</id><summary type="html">

&lt;p&gt;&lt;img alt="Difference" src="http://www.emadmokhtar.com/images/will-francis-1071726-unsplash.jpg"&gt;&lt;/p&gt;
&lt;p&gt;In Python there are many &lt;a href="https://realpython.com/python-operators-expressions/#comparison-operators"&gt;comparison operators&lt;/a&gt;; you always use them to check something in your code and let your code take decision according to the comparison, for example:&lt;/p&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Good morning&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Good afternoon&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;In this article, I want to go deep with two operators &lt;code&gt;==&lt;/code&gt; to check equality, and &lt;code&gt;is&lt;/code&gt; to check identity.&lt;/p&gt;
</summary><content type="html">

&lt;p&gt;&lt;img alt="Difference" src="http://www.emadmokhtar.com/images/will-francis-1071726-unsplash.jpg"&gt;&lt;/p&gt;
&lt;p&gt;In Python there are many &lt;a href="https://realpython.com/python-operators-expressions/#comparison-operators"&gt;comparison operators&lt;/a&gt;; you always use them to check something in your code and let your code take decision according to the comparison, for example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hour&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Good morning&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Good afternoon&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In this article, I want to go deep with two operators &lt;code&gt;==&lt;/code&gt; to check equality, and &lt;code&gt;is&lt;/code&gt; to check identity.&lt;/p&gt;


&lt;h2&gt;The &lt;code&gt;==&lt;/code&gt; operator&lt;/h2&gt;
&lt;p&gt;The equality comparison operator. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the above code, we are checking whether the value of int &lt;strong&gt;1&lt;/strong&gt; is an equal value of int &lt;strong&gt;1&lt;/strong&gt;, in other words, we are checking the values equality here. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="bp"&gt;False&lt;/span&gt; &lt;span class="c1"&gt;# Wooot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the above code, we are checking if the values of 2 objects are equal. They are not equal. Classes in Python 🐍 have &lt;a href="https://wiki.python.org/moin/DunderAlias"&gt;dunder methods&lt;/a&gt; to implement special logic of magic.&lt;/p&gt;
&lt;iframe src="https://giphy.com/embed/12NUbkX6p4xOO4" width="480" height="440" frameBorder="0" class="giphy-embed" allowFullScreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://giphy.com/gifs/shia-labeouf-12NUbkX6p4xOO4"&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For example,  &lt;code&gt;__init__()&lt;/code&gt; is dunder method to initiate a new object or the class constructor. For our example above, there is a dunder method used to check the equality which is  &lt;code&gt;__eq__()&lt;/code&gt; , if we implement it correctly, the expression in the code about should work.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__eq__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;another_number&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;another_number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;another_number&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;another_number&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="bp"&gt;True&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;All right, now our class has a correct equality logic. The equality logic is implemented in &lt;code&gt;__eq__&lt;/code&gt; method. It is also implemented in Python built-in types like Integers.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;inspect&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pprint&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pprint&lt;/span&gt;

&lt;span class="c1"&gt;# 1 is object of int class&lt;/span&gt;
&lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inspect&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getmembers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inspect&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getmembers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;The &lt;code&gt;is&lt;/code&gt; operator&lt;/h2&gt;
&lt;p&gt;The identity check operator&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;none_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;none_obj&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;number_one&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;number_one&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In Python, every object created will store a reference to it, like in the above code &lt;strong&gt;none_obj&lt;/strong&gt; which is storing a reference to &lt;strong&gt;None&lt;/strong&gt; , and &lt;strong&gt;number_one&lt;/strong&gt; object is storing a reference to &lt;strong&gt;1&lt;/strong&gt;. Let’s examine how this is done by Python.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;none_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;none_obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;4304631824&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;4304631824&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number_one&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;4304948352&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;4304948352&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When you create a new variable that stores an object or value, this variable name stores a reference to it, so if you create another variable to store the same object, Python stores a pointer to this object instead of creating a new one.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4520963656&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4520963656&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Technically speaking, when you check the identity, Python checks &lt;code&gt;id(a) == id(b)&lt;/code&gt;, which means:
Do objects &lt;strong&gt;a&lt;/strong&gt; and &lt;strong&gt;b&lt;/strong&gt; refer to the same object? So the answer will be &lt;strong&gt;True&lt;/strong&gt; if they refer to the same object.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;If you need to check the value equality, use the &lt;code&gt;==&lt;/code&gt; operator and if you need to check whether 2 objects are the same, use &lt;code&gt;is&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Happy Pythoning  😉&lt;/p&gt;</content><category term="python"></category></entry><entry><title>PACKT publishing ebooks and videos 50% discount offer</title><link href="http://www.emadmokhtar.com/packt-publishing-ebooks-and-videos-50-discount-offer.html" rel="alternate"></link><published>2016-02-17T12:00:00+03:00</published><updated>2016-02-17T12:00:00+03:00</updated><author><name>Emad Mokhtar</name></author><id>tag:www.emadmokhtar.com,2016-02-17:/packt-publishing-ebooks-and-videos-50-discount-offer.html</id><summary type="html">&lt;p&gt;Generously PACKT publishing is offering 50% discount on Python and Django ebook and videos. PACKT has many Python ebooks and videos from novice to advanced level, it one of the most publishing company that releases books and videos for Python and Django, If you tried to Google a book for Python or Django, you differently will find one of their books in the search results.&lt;/p&gt;
&lt;h2&gt;Interesting ebooks and videos for Python:&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.packtpub.com/big-data-and-business-intelligence/python-machine-learning"&gt;&lt;img alt="Python Machine Learning" src="https://www.packtpub.com/sites/default/files/5130OS_Python%20Machine%20Learning_.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.packtpub.com/big-data-and-business-intelligence/mastering-python-video"&gt;&lt;img alt="Mastering Python" src="https://www.packtpub.com/sites/default/files/bookretailers/9781783988969.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.packtpub.com/big-data-and-business-intelligence/python-data-analysis"&gt;&lt;img alt="Python DAta Analysis" src="https://www.packtpub.com/sites/default/files/3358OS_cov.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.packtpub.com/application-development/geospatial-development-example-python"&gt;&lt;img alt="Geospatial Development by Example Python" src="https://www.packtpub.com/sites/default/files/2355OS_4558_Geospatial%20Development%20by%20Example%20with%20Python.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Interesting ebooks and videos for Django:&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.packtpub.com/web-development/web-development-django-cookbook-second-edition"&gt;&lt;img alt="Web Development Django Cookbook" src="https://www.packtpub.com/sites/default/files/6775O9S_Web%20Development%20with%20Django%20Cookbook-%20Second%20Edition.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.packtpub.com/web-development/django-example"&gt;&lt;img alt="Django By Example" src="https://www.packtpub.com/sites/default/files/B03922_Django%20By%20Example_.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.packtpub.com/web-development/mastering-django-web-development-video"&gt;&lt;img alt="Master Django Web Developement" src="https://www.packtpub.com/sites/default/files/bookretailers/9781783989805_new.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Coupons&lt;/h2&gt;
&lt;p&gt;Please take the chance and buy your favorite Python or Django ebooks or videos form PACKT publishing. This offer is valid till &lt;strong&gt;28th of March 2016&lt;/strong&gt; so please hurry up&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For &lt;a href="https://www.packtpub.com/tech/python#/?utm_source=RP-Emadmokhtar&amp;amp;utm_medium=referral&amp;amp;utm_campaign=OMEPython"&gt;Python&lt;/a&gt; books and videos use &lt;strong&gt;PYTHON50&lt;/strong&gt; code.&lt;/li&gt;
&lt;li&gt;For &lt;a href="https://www.packtpub.com/tech/django#/?utm_source=RP-Emadmokhtar&amp;amp;utm_medium=referral&amp;amp;utm_campaign=OMEDjango"&gt;Django&lt;/a&gt; books and videos use  &lt;strong&gt;DJANGO50&lt;/strong&gt; code.&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Generously PACKT publishing is offering 50% discount on Python and Django ebook and videos. PACKT has many Python ebooks and videos from novice to advanced level, it one of the most publishing company that releases books and videos for Python and Django, If you tried to Google a book for Python or Django, you differently will find one of their books in the search results.&lt;/p&gt;
&lt;h2&gt;Interesting ebooks and videos for Python:&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.packtpub.com/big-data-and-business-intelligence/python-machine-learning"&gt;&lt;img alt="Python Machine Learning" src="https://www.packtpub.com/sites/default/files/5130OS_Python%20Machine%20Learning_.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.packtpub.com/big-data-and-business-intelligence/mastering-python-video"&gt;&lt;img alt="Mastering Python" src="https://www.packtpub.com/sites/default/files/bookretailers/9781783988969.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.packtpub.com/big-data-and-business-intelligence/python-data-analysis"&gt;&lt;img alt="Python DAta Analysis" src="https://www.packtpub.com/sites/default/files/3358OS_cov.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.packtpub.com/application-development/geospatial-development-example-python"&gt;&lt;img alt="Geospatial Development by Example Python" src="https://www.packtpub.com/sites/default/files/2355OS_4558_Geospatial%20Development%20by%20Example%20with%20Python.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Interesting ebooks and videos for Django:&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.packtpub.com/web-development/web-development-django-cookbook-second-edition"&gt;&lt;img alt="Web Development Django Cookbook" src="https://www.packtpub.com/sites/default/files/6775O9S_Web%20Development%20with%20Django%20Cookbook-%20Second%20Edition.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.packtpub.com/web-development/django-example"&gt;&lt;img alt="Django By Example" src="https://www.packtpub.com/sites/default/files/B03922_Django%20By%20Example_.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.packtpub.com/web-development/mastering-django-web-development-video"&gt;&lt;img alt="Master Django Web Developement" src="https://www.packtpub.com/sites/default/files/bookretailers/9781783989805_new.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Coupons&lt;/h2&gt;
&lt;p&gt;Please take the chance and buy your favorite Python or Django ebooks or videos form PACKT publishing. This offer is valid till &lt;strong&gt;28th of March 2016&lt;/strong&gt; so please hurry up&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For &lt;a href="https://www.packtpub.com/tech/python#/?utm_source=RP-Emadmokhtar&amp;amp;utm_medium=referral&amp;amp;utm_campaign=OMEPython"&gt;Python&lt;/a&gt; books and videos use &lt;strong&gt;PYTHON50&lt;/strong&gt; code.&lt;/li&gt;
&lt;li&gt;For &lt;a href="https://www.packtpub.com/tech/django#/?utm_source=RP-Emadmokhtar&amp;amp;utm_medium=referral&amp;amp;utm_campaign=OMEDjango"&gt;Django&lt;/a&gt; books and videos use  &lt;strong&gt;DJANGO50&lt;/strong&gt; code.&lt;/li&gt;
&lt;/ul&gt;</content><category term="django"></category><category term="python"></category><category term="ebooks"></category></entry><entry><title>Virtual Environment</title><link href="http://www.emadmokhtar.com/virtual-environment.html" rel="alternate"></link><published>2015-03-01T17:10:00+03:00</published><updated>2015-03-01T17:10:00+03:00</updated><author><name>EmadMokhtar</name></author><id>tag:www.emadmokhtar.com,2015-03-01:/virtual-environment.html</id><summary type="html">&lt;p&gt;While leaning web developing using Django and Python, I found out
VirtualEnv or Virtual Environment is widely used, in first I didn't get
it because I came from Microsoft .NET Framework development platform, so
I thought of writing a post about it to make simple.&lt;/p&gt;
&lt;h2&gt;What is Virtual Environment?&lt;/h2&gt;
&lt;p&gt;VirtualEnv or Virtual Environment is a way to create isolated
development environment each one has it's own packages and specific
package version, for example VirEnv1 has Django 1.6 and VirEnv2 has
Django 1.7, this isolation will keep your project packages dependency
clear, isolated, and as I'll show you below that you can replicate the
environment with one command and file, so if you work in team it's easy
to share the same environment among the
team.&lt;/p&gt;
&lt;p&gt;&lt;img alt="virtualenv 1" src="http://www.emadmokhtar.com/images/Screenshot-from-2015-03-01-193423.png"&gt;
&lt;img alt="virtualenv 2" src="http://www.emadmokhtar.com/images/Screenshot-from-2015-03-01-193318.png"&gt;&lt;/p&gt;
&lt;h2&gt;How to install VirtualEnv?&lt;/h2&gt;
&lt;p&gt;VirtualEnv is a python package so to install is you need to install pip
first.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open terminal and type the following command&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get install python-pip&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After finish installing pip type the following command to install
    virtual environment&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pip install virtualenv&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After finish installing virtualenv, type the following command to
    create folder to store your virtual environments&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mkdir .virtualenvs&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;How to create virtualenv?&lt;/h2&gt;
&lt;p&gt;After install virtualenv you are …&lt;/p&gt;</summary><content type="html">&lt;p&gt;While leaning web developing using Django and Python, I found out
VirtualEnv or Virtual Environment is widely used, in first I didn't get
it because I came from Microsoft .NET Framework development platform, so
I thought of writing a post about it to make simple.&lt;/p&gt;
&lt;h2&gt;What is Virtual Environment?&lt;/h2&gt;
&lt;p&gt;VirtualEnv or Virtual Environment is a way to create isolated
development environment each one has it's own packages and specific
package version, for example VirEnv1 has Django 1.6 and VirEnv2 has
Django 1.7, this isolation will keep your project packages dependency
clear, isolated, and as I'll show you below that you can replicate the
environment with one command and file, so if you work in team it's easy
to share the same environment among the
team.&lt;/p&gt;
&lt;p&gt;&lt;img alt="virtualenv 1" src="http://www.emadmokhtar.com/images/Screenshot-from-2015-03-01-193423.png"&gt;
&lt;img alt="virtualenv 2" src="http://www.emadmokhtar.com/images/Screenshot-from-2015-03-01-193318.png"&gt;&lt;/p&gt;
&lt;h2&gt;How to install VirtualEnv?&lt;/h2&gt;
&lt;p&gt;VirtualEnv is a python package so to install is you need to install pip
first.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open terminal and type the following command&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get install python-pip&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After finish installing pip type the following command to install
    virtual environment&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pip install virtualenv&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After finish installing virtualenv, type the following command to
    create folder to store your virtual environments&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mkdir .virtualenvs&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;How to create virtualenv?&lt;/h2&gt;
&lt;p&gt;After install virtualenv you are ready to create your first virtual
environment, open the terminal:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Browse .virtualenvs folder&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd .virtualenvs&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create your virtualenv by tying the following command&lt;/p&gt;
&lt;p&gt;&lt;code&gt;virtualenv VirEnv1&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now virtualenv will create a folder inside .virtualenvs with
    virtualenv name, browse it&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd VirEnv1&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now the virtualenv is created but you need to activate it. To
    activate the virtualenv type the following command&lt;/p&gt;
&lt;p&gt;&lt;code&gt;source bin/activate&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you find the treminal current line has virtualenv name inside
    brackets (VirEnv1) this means that your virtualenv is activated.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="activate" src="http://www.emadmokhtar.com/images/activate.png"&gt;&lt;/p&gt;
&lt;p&gt;There is another package to help you doing the above setups with one
simple command which called virtualenvwrapper.&lt;/p&gt;
&lt;h2&gt;What is virtualenvwrapper?&lt;/h2&gt;
&lt;p&gt;virtualenvwrapper is a package help creating and managing virtualenv
easy and fast.&lt;/p&gt;
&lt;h2&gt;How to install VirtualWnvWrapper?&lt;/h2&gt;
&lt;p&gt;To install virtualenvwrapper just type the following command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pip install virtualenvwrapper
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;How to use virtualenvwrapper?&lt;/h2&gt;
&lt;p&gt;To use virtualenvwrapper you need &lt;a href="https://virtualenvwrapper.readthedocs.org/en/latest/install.html#shell-startup-file"&gt;first to configure your shell&lt;/a&gt; to active its commend every time you open new session.&lt;/p&gt;
&lt;h1&gt;Configure shell&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Open .bash_profile by typing this command in the terminal nano
    \~/.bashrc&lt;/li&gt;
&lt;li&gt;Add these  3 lines to the file and save it.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;export WORKON_HOME=$HOME/.virtualenvsexport PROJECT_HOME=$HOME/Develsource /usr/local/bin/virtualenvwrapper.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;First line configure the path for your virtual environments
folder.Second line configure the path for your development project
folder.Third line is virtualenvwrapper executable file. virtualenvwrapper
Commands:To create new virtual environment:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkvirtualenv &amp;lt;virtual environment name&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;boom your virtual environment is created and activated as well.To
activate virtual environment:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;workon  &amp;lt;virtual environment name&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To deactivate virtual environment:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;deactivate
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;How to Replicate your virtual environment?&lt;/h2&gt;
&lt;p&gt;Every virtual environment has its own packages, and there are command to
list all the packages and its version, export pacakge list, and install
packages from file exported, lets see how to can do this.&lt;/p&gt;
&lt;h1&gt;List virtual environment packages&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip freeze
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="pip-freeze" src="http://www.emadmokhtar.com/images/pip-freeze2.png"&gt;&lt;/p&gt;
&lt;h1&gt;Export environment packages&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip freeze &amp;gt; requirements.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="pip-freeze" src="http://www.emadmokhtar.com/images/pip-freeze-2.png"&gt;
&lt;img alt="requirements" src="http://www.emadmokhtar.com/images/requirements2.png"&gt;&lt;/p&gt;
&lt;h1&gt;Install virtual envirment packages from file&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install -r requirement.txt
&lt;/pre&gt;&lt;/div&gt;</content><category term="django"></category><category term="pip"></category><category term="python"></category><category term="virtualenv"></category></entry></feed>