Entity Framework Audit Trail
############################
:date: 2014-11-04 18:52
:author: admin
:category: .net
:tags: AuditLog, AuditTrail, EF, EntityFramework
:slug:  
:status: draft

One of my old project I was working on a requirement which is to audit
log every single transaction done within the software, in old days of
Store Procedures I used SQL trigger for each database table as mentioned
in Jon Galloway
`article <http://weblogs.asp.net/jongalloway/adding-simple-trigger-based-auditing-to-your-sql-server-database>`__
it was so easy and simple, but nowadays I’m using Microsoft Entity
Framework to generate SQL statements and data access operations, and I
found the method mentioned before won’t work with Entity Framework
because the username captured by trigger is the SQL user who are logged
during the transaction.

After a while I have coded a piece of code to do the same job as the
method mentioned above but from Entity Framework, note to mention this
is not the perfect, the best, and the only way to implement audit trail
in Entity Framework but this is a one way that cover a certain
requirement.

The Code:
^^^^^^^^^

After reading **`Programming Entity Framework:
DbContext <http://shop.oreilly.com/product/0636920022237.do>`__** book
by *Julia Lerman and Rowan Miller*, I found I can use *partial class* C#
feature to create a class looks like my original *DbContext* class and
override *SaveChanges()* method and this give you ability to perform
something before or after the entities persist back to the database:

.. raw:: html

   <p>
   <script src="https://gist.github.com/EmadMokhtar/e33e307afebcceeb3aea.js"></script>

Unfortunately this won’t give me the ability to pass the username to my
audit log, and I was writing this implementation to capture the
application username, so this time I thought of overloading
*SaveChanges()* method and pass the username and its argument:

.. raw:: html

   <p>
   <script src="https://gist.github.com/EmadMokhtar/33157ebf531681f6474c.js"></script>
   </p>
